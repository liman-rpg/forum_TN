.score
  %p= "Likes: #{votable.total_score}"

-if user_signed_in? && !current_user.author_of?(votable)
  -unless votable.votes.exists?(user: current_user)
    = link_to "Up \t", polymorphic_path(votable, action: :vote_up), remote: true, method: :post, class: 'vote-link-up', data: { answer_id: votable.id }
    = link_to "Down \t", polymorphic_path(votable, action: :vote_down), remote: true, method: :post, class: 'vote-link-down', data: { answer_id: votable.id }
    = link_to 'Cancel', polymorphic_path(votable, action: :vote_cancel), remote: true, method: :post, class: 'vote-link-cancel', data: { answer_id: votable.id }, style:'display:none'
  -else
    = link_to "Up \t", polymorphic_path(votable, action: :vote_up), remote: true, method: :post, class: 'vote-link-up', data: { answer_id: votable.id }, style:'display:none'
    = link_to "Down \t", polymorphic_path(votable, action: :vote_down), remote: true, method: :post, class: 'vote-link-down', data: { answer_id: votable.id }, style:'display:none'
    = link_to 'Cancel', polymorphic_path(votable, action: :vote_cancel), remote: true, method: :post, class: 'vote-link-cancel', data: { answer_id: votable.id }
